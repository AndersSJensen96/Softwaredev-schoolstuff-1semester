@page "/calculator"

<h1>Basic Calculator Demo Using Blazor</h1>
<hr />
<div>
    <div class="row">
        <div class="col-md-3">
            <p>First Number</p>
        </div>
        <div class="col-md-4">
            <input id="FirstColumn" placeholder="Enter First Number" @bind="@num1" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-3">
            <p>Second Number</p>
        </div>
        <div class="col-md-4">
            <input id="SecondColumn" placeholder="Enter Second Number" @bind="@num2" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-3">
            <p>Result</p>
        </div>
        <div class="col-md-4">
            <input id="FinalResult" readonly @bind="@finalresult"/>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-2">
            <button @onclick="AddNumbers" class="btn btn-light">Add (+)</button>
        </div>
        <div class="col-md-2">
            <button @onclick="SubtractNumbers" class="btn btn-primary">Subtract (−)</button>
        </div>
        <div class="col-md-2">
            <button @onclick="MultiplyNumbers" class="btn btn-success ">Multiply (X)</button>
        </div>
        <div class="col-md-2">
            <button @onclick="DivideNumbers" class="btn btn-info">Divide (/)</button>
        </div>
        <div class="col-md-2">
            <button id="SquareRoot" @onclick="SquareNumber" class="btn btn-info">Square (sqr)</button>
        </div>
        <div class="col-md-2">
            <button id="ModulusNumber" @onclick="Modulus" class="btn btn-info">Square (%)</button>
        </div>
        <div class="col-md-2">
            <button id="PowerOf" @onclick="PowerOf" class="btn btn-info">Square (Power)</button>
        </div>
    </div>
</div>

@code {
    string num1;
    string num2;
    string finalresult;
    void AddNumbers()
    {
        finalresult = (Convert.ToDouble(num1) + Convert.ToDouble(num2)).ToString();
    }
    void SubtractNumbers()
    {
        finalresult = (Convert.ToDouble(num1) - Convert.ToDouble(num2)).ToString();
    }
    void MultiplyNumbers()
    {
        finalresult = (Convert.ToDouble(num1) * Convert.ToDouble(num2)).ToString();
    }
    void DivideNumbers()
    {
        if (Convert.ToDouble(num2) != 0)
        {
            finalresult = (Convert.ToDouble(num1) / Convert.ToDouble(num2)).ToString();
        }
        else
        {
            finalresult = "Cannot Divide by Zero";
        }
    }
    void SquareNumber()
    {
        if(Convert.ToDouble(num1) != 0)
        {
            finalresult = Math.Sqrt(double.Parse(num1)).ToString();
        }
        else
        {
            finalresult = "Invalid number";
        }

    }
    void PowerOf()
    {
        if (Convert.ToDouble(num1) != 0 && Convert.ToDouble(num2) != 0)
        {
            finalresult = Math.Pow(double.Parse(num1), double.Parse(num2)).ToString();
        }
        else
        {
            finalresult = "Invalid numbers";
        }


    }
    void Modulus()
    {
        if (Convert.ToDouble(num1) != 0 && Convert.ToDouble(num2) != 0)
        {
            finalresult = (double.Parse(num1) % double.Parse(num2)).ToString();
        }
        else
        {
            finalresult = "Invalid numbers";
        }

    }
}
